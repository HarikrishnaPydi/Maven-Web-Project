node {
    notifyBuild('STARTED')

    try {
        echo "Git branch name: ${env.BRANCH_NAME}"
        echo "Build number is: ${env.BUILD_NUMBER}"
        echo "Node name is: ${env.NODE_NAME}"

        def mavenHome = tool name: "maven-3.9.9"

        stage('Git Checkout') {
            git branch: 'development', credentialsId: 'gtihub-credentials', url: 'https://github.com/HarikrishnaPydi/Maven-Web-Project.git'
        }

        stage('Build') {
            sh "${mavenHome}/bin/mvn clean package"
        }

        stage('SonarQube Report') {
            sh "${mavenHome}/bin/mvn clean sonar:sonar package"
        }

        stage('Deploy to Nexus') {
            sh "${mavenHome}/bin/mvn sonar:sonar deploy"
        }

        stage('Deploy to Tomcat') {
            deploy adapters: [tomcat9(credentialsId: 'tomcat-credential', path: '', url: 'http://52.1.54.148:8080/')], contextPath: null, war: '**/maven-web-application.war'
        }

        // âœ… Mark success
        currentBuild.result = 'SUCCESS'

    } catch (Exception e) {
        currentBuild.result = 'FAILURE'
        throw e
    } finally {
        notifyBuild(currentBuild.result)
    }
}
def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
